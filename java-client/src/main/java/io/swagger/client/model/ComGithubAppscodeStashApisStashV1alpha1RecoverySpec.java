/*
 * stash-server
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.ComGithubAppscodeStashApisStashV1alpha1Backend;
import io.swagger.client.model.ComGithubAppscodeStashApisStashV1alpha1LocalSpec;
import io.swagger.client.model.ComGithubAppscodeStashApisStashV1alpha1LocalTypedReference;
import io.swagger.client.model.IoK8sApiCoreV1LocalObjectReference;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ComGithubAppscodeStashApisStashV1alpha1RecoverySpec
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-09T00:59:16.508-07:00")
public class ComGithubAppscodeStashApisStashV1alpha1RecoverySpec {
  @SerializedName("backend")
  private ComGithubAppscodeStashApisStashV1alpha1Backend backend = null;

  @SerializedName("imagePullSecrets")
  private List<IoK8sApiCoreV1LocalObjectReference> imagePullSecrets = null;

  @SerializedName("nodeName")
  private String nodeName = null;

  @SerializedName("paths")
  private List<String> paths = null;

  @SerializedName("podOrdinal")
  private String podOrdinal = null;

  @SerializedName("recoveredVolumes")
  private List<ComGithubAppscodeStashApisStashV1alpha1LocalSpec> recoveredVolumes = null;

  @SerializedName("workload")
  private ComGithubAppscodeStashApisStashV1alpha1LocalTypedReference workload = null;

  public ComGithubAppscodeStashApisStashV1alpha1RecoverySpec backend(ComGithubAppscodeStashApisStashV1alpha1Backend backend) {
    this.backend = backend;
    return this;
  }

   /**
   * Get backend
   * @return backend
  **/
  @ApiModelProperty(value = "")
  public ComGithubAppscodeStashApisStashV1alpha1Backend getBackend() {
    return backend;
  }

  public void setBackend(ComGithubAppscodeStashApisStashV1alpha1Backend backend) {
    this.backend = backend;
  }

  public ComGithubAppscodeStashApisStashV1alpha1RecoverySpec imagePullSecrets(List<IoK8sApiCoreV1LocalObjectReference> imagePullSecrets) {
    this.imagePullSecrets = imagePullSecrets;
    return this;
  }

  public ComGithubAppscodeStashApisStashV1alpha1RecoverySpec addImagePullSecretsItem(IoK8sApiCoreV1LocalObjectReference imagePullSecretsItem) {
    if (this.imagePullSecrets == null) {
      this.imagePullSecrets = new ArrayList<IoK8sApiCoreV1LocalObjectReference>();
    }
    this.imagePullSecrets.add(imagePullSecretsItem);
    return this;
  }

   /**
   * Get imagePullSecrets
   * @return imagePullSecrets
  **/
  @ApiModelProperty(value = "")
  public List<IoK8sApiCoreV1LocalObjectReference> getImagePullSecrets() {
    return imagePullSecrets;
  }

  public void setImagePullSecrets(List<IoK8sApiCoreV1LocalObjectReference> imagePullSecrets) {
    this.imagePullSecrets = imagePullSecrets;
  }

  public ComGithubAppscodeStashApisStashV1alpha1RecoverySpec nodeName(String nodeName) {
    this.nodeName = nodeName;
    return this;
  }

   /**
   * Get nodeName
   * @return nodeName
  **/
  @ApiModelProperty(value = "")
  public String getNodeName() {
    return nodeName;
  }

  public void setNodeName(String nodeName) {
    this.nodeName = nodeName;
  }

  public ComGithubAppscodeStashApisStashV1alpha1RecoverySpec paths(List<String> paths) {
    this.paths = paths;
    return this;
  }

  public ComGithubAppscodeStashApisStashV1alpha1RecoverySpec addPathsItem(String pathsItem) {
    if (this.paths == null) {
      this.paths = new ArrayList<String>();
    }
    this.paths.add(pathsItem);
    return this;
  }

   /**
   * Get paths
   * @return paths
  **/
  @ApiModelProperty(value = "")
  public List<String> getPaths() {
    return paths;
  }

  public void setPaths(List<String> paths) {
    this.paths = paths;
  }

  public ComGithubAppscodeStashApisStashV1alpha1RecoverySpec podOrdinal(String podOrdinal) {
    this.podOrdinal = podOrdinal;
    return this;
  }

   /**
   * Get podOrdinal
   * @return podOrdinal
  **/
  @ApiModelProperty(value = "")
  public String getPodOrdinal() {
    return podOrdinal;
  }

  public void setPodOrdinal(String podOrdinal) {
    this.podOrdinal = podOrdinal;
  }

  public ComGithubAppscodeStashApisStashV1alpha1RecoverySpec recoveredVolumes(List<ComGithubAppscodeStashApisStashV1alpha1LocalSpec> recoveredVolumes) {
    this.recoveredVolumes = recoveredVolumes;
    return this;
  }

  public ComGithubAppscodeStashApisStashV1alpha1RecoverySpec addRecoveredVolumesItem(ComGithubAppscodeStashApisStashV1alpha1LocalSpec recoveredVolumesItem) {
    if (this.recoveredVolumes == null) {
      this.recoveredVolumes = new ArrayList<ComGithubAppscodeStashApisStashV1alpha1LocalSpec>();
    }
    this.recoveredVolumes.add(recoveredVolumesItem);
    return this;
  }

   /**
   * Get recoveredVolumes
   * @return recoveredVolumes
  **/
  @ApiModelProperty(value = "")
  public List<ComGithubAppscodeStashApisStashV1alpha1LocalSpec> getRecoveredVolumes() {
    return recoveredVolumes;
  }

  public void setRecoveredVolumes(List<ComGithubAppscodeStashApisStashV1alpha1LocalSpec> recoveredVolumes) {
    this.recoveredVolumes = recoveredVolumes;
  }

  public ComGithubAppscodeStashApisStashV1alpha1RecoverySpec workload(ComGithubAppscodeStashApisStashV1alpha1LocalTypedReference workload) {
    this.workload = workload;
    return this;
  }

   /**
   * Get workload
   * @return workload
  **/
  @ApiModelProperty(value = "")
  public ComGithubAppscodeStashApisStashV1alpha1LocalTypedReference getWorkload() {
    return workload;
  }

  public void setWorkload(ComGithubAppscodeStashApisStashV1alpha1LocalTypedReference workload) {
    this.workload = workload;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComGithubAppscodeStashApisStashV1alpha1RecoverySpec comGithubAppscodeStashApisStashV1alpha1RecoverySpec = (ComGithubAppscodeStashApisStashV1alpha1RecoverySpec) o;
    return Objects.equals(this.backend, comGithubAppscodeStashApisStashV1alpha1RecoverySpec.backend) &&
        Objects.equals(this.imagePullSecrets, comGithubAppscodeStashApisStashV1alpha1RecoverySpec.imagePullSecrets) &&
        Objects.equals(this.nodeName, comGithubAppscodeStashApisStashV1alpha1RecoverySpec.nodeName) &&
        Objects.equals(this.paths, comGithubAppscodeStashApisStashV1alpha1RecoverySpec.paths) &&
        Objects.equals(this.podOrdinal, comGithubAppscodeStashApisStashV1alpha1RecoverySpec.podOrdinal) &&
        Objects.equals(this.recoveredVolumes, comGithubAppscodeStashApisStashV1alpha1RecoverySpec.recoveredVolumes) &&
        Objects.equals(this.workload, comGithubAppscodeStashApisStashV1alpha1RecoverySpec.workload);
  }

  @Override
  public int hashCode() {
    return Objects.hash(backend, imagePullSecrets, nodeName, paths, podOrdinal, recoveredVolumes, workload);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComGithubAppscodeStashApisStashV1alpha1RecoverySpec {\n");
    
    sb.append("    backend: ").append(toIndentedString(backend)).append("\n");
    sb.append("    imagePullSecrets: ").append(toIndentedString(imagePullSecrets)).append("\n");
    sb.append("    nodeName: ").append(toIndentedString(nodeName)).append("\n");
    sb.append("    paths: ").append(toIndentedString(paths)).append("\n");
    sb.append("    podOrdinal: ").append(toIndentedString(podOrdinal)).append("\n");
    sb.append("    recoveredVolumes: ").append(toIndentedString(recoveredVolumes)).append("\n");
    sb.append("    workload: ").append(toIndentedString(workload)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


/*
 * stash-server
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.ComGithubAppscodeStashApisStashV1alpha1Backend;
import io.swagger.client.model.ComGithubAppscodeStashApisStashV1alpha1FileGroup;
import io.swagger.client.model.ComGithubAppscodeStashApisStashV1alpha1RetentionPolicy;
import io.swagger.client.model.IoK8sApiCoreV1LocalObjectReference;
import io.swagger.client.model.IoK8sApiCoreV1ResourceRequirements;
import io.swagger.client.model.IoK8sApiCoreV1VolumeMount;
import io.swagger.client.model.IoK8sApimachineryPkgApisMetaV1LabelSelector;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ComGithubAppscodeStashApisStashV1alpha1ResticSpec
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-09T00:59:16.508-07:00")
public class ComGithubAppscodeStashApisStashV1alpha1ResticSpec {
  @SerializedName("backend")
  private ComGithubAppscodeStashApisStashV1alpha1Backend backend = null;

  @SerializedName("fileGroups")
  private List<ComGithubAppscodeStashApisStashV1alpha1FileGroup> fileGroups = null;

  @SerializedName("imagePullSecrets")
  private List<IoK8sApiCoreV1LocalObjectReference> imagePullSecrets = null;

  @SerializedName("paused")
  private Boolean paused = null;

  @SerializedName("resources")
  private IoK8sApiCoreV1ResourceRequirements resources = null;

  @SerializedName("retentionPolicies")
  private List<ComGithubAppscodeStashApisStashV1alpha1RetentionPolicy> retentionPolicies = null;

  @SerializedName("schedule")
  private String schedule = null;

  @SerializedName("selector")
  private IoK8sApimachineryPkgApisMetaV1LabelSelector selector = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("volumeMounts")
  private List<IoK8sApiCoreV1VolumeMount> volumeMounts = null;

  public ComGithubAppscodeStashApisStashV1alpha1ResticSpec backend(ComGithubAppscodeStashApisStashV1alpha1Backend backend) {
    this.backend = backend;
    return this;
  }

   /**
   * Get backend
   * @return backend
  **/
  @ApiModelProperty(value = "")
  public ComGithubAppscodeStashApisStashV1alpha1Backend getBackend() {
    return backend;
  }

  public void setBackend(ComGithubAppscodeStashApisStashV1alpha1Backend backend) {
    this.backend = backend;
  }

  public ComGithubAppscodeStashApisStashV1alpha1ResticSpec fileGroups(List<ComGithubAppscodeStashApisStashV1alpha1FileGroup> fileGroups) {
    this.fileGroups = fileGroups;
    return this;
  }

  public ComGithubAppscodeStashApisStashV1alpha1ResticSpec addFileGroupsItem(ComGithubAppscodeStashApisStashV1alpha1FileGroup fileGroupsItem) {
    if (this.fileGroups == null) {
      this.fileGroups = new ArrayList<ComGithubAppscodeStashApisStashV1alpha1FileGroup>();
    }
    this.fileGroups.add(fileGroupsItem);
    return this;
  }

   /**
   * Get fileGroups
   * @return fileGroups
  **/
  @ApiModelProperty(value = "")
  public List<ComGithubAppscodeStashApisStashV1alpha1FileGroup> getFileGroups() {
    return fileGroups;
  }

  public void setFileGroups(List<ComGithubAppscodeStashApisStashV1alpha1FileGroup> fileGroups) {
    this.fileGroups = fileGroups;
  }

  public ComGithubAppscodeStashApisStashV1alpha1ResticSpec imagePullSecrets(List<IoK8sApiCoreV1LocalObjectReference> imagePullSecrets) {
    this.imagePullSecrets = imagePullSecrets;
    return this;
  }

  public ComGithubAppscodeStashApisStashV1alpha1ResticSpec addImagePullSecretsItem(IoK8sApiCoreV1LocalObjectReference imagePullSecretsItem) {
    if (this.imagePullSecrets == null) {
      this.imagePullSecrets = new ArrayList<IoK8sApiCoreV1LocalObjectReference>();
    }
    this.imagePullSecrets.add(imagePullSecretsItem);
    return this;
  }

   /**
   * ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod
   * @return imagePullSecrets
  **/
  @ApiModelProperty(value = "ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod")
  public List<IoK8sApiCoreV1LocalObjectReference> getImagePullSecrets() {
    return imagePullSecrets;
  }

  public void setImagePullSecrets(List<IoK8sApiCoreV1LocalObjectReference> imagePullSecrets) {
    this.imagePullSecrets = imagePullSecrets;
  }

  public ComGithubAppscodeStashApisStashV1alpha1ResticSpec paused(Boolean paused) {
    this.paused = paused;
    return this;
  }

   /**
   * Indicates that the Restic is paused from taking backup. Default value is &#39;false&#39;
   * @return paused
  **/
  @ApiModelProperty(value = "Indicates that the Restic is paused from taking backup. Default value is 'false'")
  public Boolean isPaused() {
    return paused;
  }

  public void setPaused(Boolean paused) {
    this.paused = paused;
  }

  public ComGithubAppscodeStashApisStashV1alpha1ResticSpec resources(IoK8sApiCoreV1ResourceRequirements resources) {
    this.resources = resources;
    return this;
  }

   /**
   * Compute Resources required by the sidecar container.
   * @return resources
  **/
  @ApiModelProperty(value = "Compute Resources required by the sidecar container.")
  public IoK8sApiCoreV1ResourceRequirements getResources() {
    return resources;
  }

  public void setResources(IoK8sApiCoreV1ResourceRequirements resources) {
    this.resources = resources;
  }

  public ComGithubAppscodeStashApisStashV1alpha1ResticSpec retentionPolicies(List<ComGithubAppscodeStashApisStashV1alpha1RetentionPolicy> retentionPolicies) {
    this.retentionPolicies = retentionPolicies;
    return this;
  }

  public ComGithubAppscodeStashApisStashV1alpha1ResticSpec addRetentionPoliciesItem(ComGithubAppscodeStashApisStashV1alpha1RetentionPolicy retentionPoliciesItem) {
    if (this.retentionPolicies == null) {
      this.retentionPolicies = new ArrayList<ComGithubAppscodeStashApisStashV1alpha1RetentionPolicy>();
    }
    this.retentionPolicies.add(retentionPoliciesItem);
    return this;
  }

   /**
   * Get retentionPolicies
   * @return retentionPolicies
  **/
  @ApiModelProperty(value = "")
  public List<ComGithubAppscodeStashApisStashV1alpha1RetentionPolicy> getRetentionPolicies() {
    return retentionPolicies;
  }

  public void setRetentionPolicies(List<ComGithubAppscodeStashApisStashV1alpha1RetentionPolicy> retentionPolicies) {
    this.retentionPolicies = retentionPolicies;
  }

  public ComGithubAppscodeStashApisStashV1alpha1ResticSpec schedule(String schedule) {
    this.schedule = schedule;
    return this;
  }

   /**
   * Get schedule
   * @return schedule
  **/
  @ApiModelProperty(value = "")
  public String getSchedule() {
    return schedule;
  }

  public void setSchedule(String schedule) {
    this.schedule = schedule;
  }

  public ComGithubAppscodeStashApisStashV1alpha1ResticSpec selector(IoK8sApimachineryPkgApisMetaV1LabelSelector selector) {
    this.selector = selector;
    return this;
  }

   /**
   * Get selector
   * @return selector
  **/
  @ApiModelProperty(value = "")
  public IoK8sApimachineryPkgApisMetaV1LabelSelector getSelector() {
    return selector;
  }

  public void setSelector(IoK8sApimachineryPkgApisMetaV1LabelSelector selector) {
    this.selector = selector;
  }

  public ComGithubAppscodeStashApisStashV1alpha1ResticSpec type(String type) {
    this.type = type;
    return this;
  }

   /**
   * https://github.com/appscode/stash/issues/225
   * @return type
  **/
  @ApiModelProperty(value = "https://github.com/appscode/stash/issues/225")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public ComGithubAppscodeStashApisStashV1alpha1ResticSpec volumeMounts(List<IoK8sApiCoreV1VolumeMount> volumeMounts) {
    this.volumeMounts = volumeMounts;
    return this;
  }

  public ComGithubAppscodeStashApisStashV1alpha1ResticSpec addVolumeMountsItem(IoK8sApiCoreV1VolumeMount volumeMountsItem) {
    if (this.volumeMounts == null) {
      this.volumeMounts = new ArrayList<IoK8sApiCoreV1VolumeMount>();
    }
    this.volumeMounts.add(volumeMountsItem);
    return this;
  }

   /**
   * Pod volumes to mount into the sidecar container&#39;s filesystem.
   * @return volumeMounts
  **/
  @ApiModelProperty(value = "Pod volumes to mount into the sidecar container's filesystem.")
  public List<IoK8sApiCoreV1VolumeMount> getVolumeMounts() {
    return volumeMounts;
  }

  public void setVolumeMounts(List<IoK8sApiCoreV1VolumeMount> volumeMounts) {
    this.volumeMounts = volumeMounts;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComGithubAppscodeStashApisStashV1alpha1ResticSpec comGithubAppscodeStashApisStashV1alpha1ResticSpec = (ComGithubAppscodeStashApisStashV1alpha1ResticSpec) o;
    return Objects.equals(this.backend, comGithubAppscodeStashApisStashV1alpha1ResticSpec.backend) &&
        Objects.equals(this.fileGroups, comGithubAppscodeStashApisStashV1alpha1ResticSpec.fileGroups) &&
        Objects.equals(this.imagePullSecrets, comGithubAppscodeStashApisStashV1alpha1ResticSpec.imagePullSecrets) &&
        Objects.equals(this.paused, comGithubAppscodeStashApisStashV1alpha1ResticSpec.paused) &&
        Objects.equals(this.resources, comGithubAppscodeStashApisStashV1alpha1ResticSpec.resources) &&
        Objects.equals(this.retentionPolicies, comGithubAppscodeStashApisStashV1alpha1ResticSpec.retentionPolicies) &&
        Objects.equals(this.schedule, comGithubAppscodeStashApisStashV1alpha1ResticSpec.schedule) &&
        Objects.equals(this.selector, comGithubAppscodeStashApisStashV1alpha1ResticSpec.selector) &&
        Objects.equals(this.type, comGithubAppscodeStashApisStashV1alpha1ResticSpec.type) &&
        Objects.equals(this.volumeMounts, comGithubAppscodeStashApisStashV1alpha1ResticSpec.volumeMounts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(backend, fileGroups, imagePullSecrets, paused, resources, retentionPolicies, schedule, selector, type, volumeMounts);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComGithubAppscodeStashApisStashV1alpha1ResticSpec {\n");
    
    sb.append("    backend: ").append(toIndentedString(backend)).append("\n");
    sb.append("    fileGroups: ").append(toIndentedString(fileGroups)).append("\n");
    sb.append("    imagePullSecrets: ").append(toIndentedString(imagePullSecrets)).append("\n");
    sb.append("    paused: ").append(toIndentedString(paused)).append("\n");
    sb.append("    resources: ").append(toIndentedString(resources)).append("\n");
    sb.append("    retentionPolicies: ").append(toIndentedString(retentionPolicies)).append("\n");
    sb.append("    schedule: ").append(toIndentedString(schedule)).append("\n");
    sb.append("    selector: ").append(toIndentedString(selector)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    volumeMounts: ").append(toIndentedString(volumeMounts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


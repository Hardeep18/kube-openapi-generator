# coding: utf-8

"""
    stash-server

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: v0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from swagger_client.models.com_github_appscode_stash_apis_stash_v1alpha1_azure_spec import ComGithubAppscodeStashApisStashV1alpha1AzureSpec  # noqa: F401,E501
from swagger_client.models.com_github_appscode_stash_apis_stash_v1alpha1_b2_spec import ComGithubAppscodeStashApisStashV1alpha1B2Spec  # noqa: F401,E501
from swagger_client.models.com_github_appscode_stash_apis_stash_v1alpha1_gcs_spec import ComGithubAppscodeStashApisStashV1alpha1GCSSpec  # noqa: F401,E501
from swagger_client.models.com_github_appscode_stash_apis_stash_v1alpha1_local_spec import ComGithubAppscodeStashApisStashV1alpha1LocalSpec  # noqa: F401,E501
from swagger_client.models.com_github_appscode_stash_apis_stash_v1alpha1_s3_spec import ComGithubAppscodeStashApisStashV1alpha1S3Spec  # noqa: F401,E501
from swagger_client.models.com_github_appscode_stash_apis_stash_v1alpha1_swift_spec import ComGithubAppscodeStashApisStashV1alpha1SwiftSpec  # noqa: F401,E501


class ComGithubAppscodeStashApisStashV1alpha1Backend(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'azure': 'ComGithubAppscodeStashApisStashV1alpha1AzureSpec',
        'b2': 'ComGithubAppscodeStashApisStashV1alpha1B2Spec',
        'gcs': 'ComGithubAppscodeStashApisStashV1alpha1GCSSpec',
        'local': 'ComGithubAppscodeStashApisStashV1alpha1LocalSpec',
        's3': 'ComGithubAppscodeStashApisStashV1alpha1S3Spec',
        'storage_secret_name': 'str',
        'swift': 'ComGithubAppscodeStashApisStashV1alpha1SwiftSpec'
    }

    attribute_map = {
        'azure': 'azure',
        'b2': 'b2',
        'gcs': 'gcs',
        'local': 'local',
        's3': 's3',
        'storage_secret_name': 'storageSecretName',
        'swift': 'swift'
    }

    def __init__(self, azure=None, b2=None, gcs=None, local=None, s3=None, storage_secret_name=None, swift=None):  # noqa: E501
        """ComGithubAppscodeStashApisStashV1alpha1Backend - a model defined in Swagger"""  # noqa: E501

        self._azure = None
        self._b2 = None
        self._gcs = None
        self._local = None
        self._s3 = None
        self._storage_secret_name = None
        self._swift = None
        self.discriminator = None

        if azure is not None:
            self.azure = azure
        if b2 is not None:
            self.b2 = b2
        if gcs is not None:
            self.gcs = gcs
        if local is not None:
            self.local = local
        if s3 is not None:
            self.s3 = s3
        if storage_secret_name is not None:
            self.storage_secret_name = storage_secret_name
        if swift is not None:
            self.swift = swift

    @property
    def azure(self):
        """Gets the azure of this ComGithubAppscodeStashApisStashV1alpha1Backend.  # noqa: E501


        :return: The azure of this ComGithubAppscodeStashApisStashV1alpha1Backend.  # noqa: E501
        :rtype: ComGithubAppscodeStashApisStashV1alpha1AzureSpec
        """
        return self._azure

    @azure.setter
    def azure(self, azure):
        """Sets the azure of this ComGithubAppscodeStashApisStashV1alpha1Backend.


        :param azure: The azure of this ComGithubAppscodeStashApisStashV1alpha1Backend.  # noqa: E501
        :type: ComGithubAppscodeStashApisStashV1alpha1AzureSpec
        """

        self._azure = azure

    @property
    def b2(self):
        """Gets the b2 of this ComGithubAppscodeStashApisStashV1alpha1Backend.  # noqa: E501


        :return: The b2 of this ComGithubAppscodeStashApisStashV1alpha1Backend.  # noqa: E501
        :rtype: ComGithubAppscodeStashApisStashV1alpha1B2Spec
        """
        return self._b2

    @b2.setter
    def b2(self, b2):
        """Sets the b2 of this ComGithubAppscodeStashApisStashV1alpha1Backend.


        :param b2: The b2 of this ComGithubAppscodeStashApisStashV1alpha1Backend.  # noqa: E501
        :type: ComGithubAppscodeStashApisStashV1alpha1B2Spec
        """

        self._b2 = b2

    @property
    def gcs(self):
        """Gets the gcs of this ComGithubAppscodeStashApisStashV1alpha1Backend.  # noqa: E501


        :return: The gcs of this ComGithubAppscodeStashApisStashV1alpha1Backend.  # noqa: E501
        :rtype: ComGithubAppscodeStashApisStashV1alpha1GCSSpec
        """
        return self._gcs

    @gcs.setter
    def gcs(self, gcs):
        """Sets the gcs of this ComGithubAppscodeStashApisStashV1alpha1Backend.


        :param gcs: The gcs of this ComGithubAppscodeStashApisStashV1alpha1Backend.  # noqa: E501
        :type: ComGithubAppscodeStashApisStashV1alpha1GCSSpec
        """

        self._gcs = gcs

    @property
    def local(self):
        """Gets the local of this ComGithubAppscodeStashApisStashV1alpha1Backend.  # noqa: E501


        :return: The local of this ComGithubAppscodeStashApisStashV1alpha1Backend.  # noqa: E501
        :rtype: ComGithubAppscodeStashApisStashV1alpha1LocalSpec
        """
        return self._local

    @local.setter
    def local(self, local):
        """Sets the local of this ComGithubAppscodeStashApisStashV1alpha1Backend.


        :param local: The local of this ComGithubAppscodeStashApisStashV1alpha1Backend.  # noqa: E501
        :type: ComGithubAppscodeStashApisStashV1alpha1LocalSpec
        """

        self._local = local

    @property
    def s3(self):
        """Gets the s3 of this ComGithubAppscodeStashApisStashV1alpha1Backend.  # noqa: E501


        :return: The s3 of this ComGithubAppscodeStashApisStashV1alpha1Backend.  # noqa: E501
        :rtype: ComGithubAppscodeStashApisStashV1alpha1S3Spec
        """
        return self._s3

    @s3.setter
    def s3(self, s3):
        """Sets the s3 of this ComGithubAppscodeStashApisStashV1alpha1Backend.


        :param s3: The s3 of this ComGithubAppscodeStashApisStashV1alpha1Backend.  # noqa: E501
        :type: ComGithubAppscodeStashApisStashV1alpha1S3Spec
        """

        self._s3 = s3

    @property
    def storage_secret_name(self):
        """Gets the storage_secret_name of this ComGithubAppscodeStashApisStashV1alpha1Backend.  # noqa: E501


        :return: The storage_secret_name of this ComGithubAppscodeStashApisStashV1alpha1Backend.  # noqa: E501
        :rtype: str
        """
        return self._storage_secret_name

    @storage_secret_name.setter
    def storage_secret_name(self, storage_secret_name):
        """Sets the storage_secret_name of this ComGithubAppscodeStashApisStashV1alpha1Backend.


        :param storage_secret_name: The storage_secret_name of this ComGithubAppscodeStashApisStashV1alpha1Backend.  # noqa: E501
        :type: str
        """

        self._storage_secret_name = storage_secret_name

    @property
    def swift(self):
        """Gets the swift of this ComGithubAppscodeStashApisStashV1alpha1Backend.  # noqa: E501


        :return: The swift of this ComGithubAppscodeStashApisStashV1alpha1Backend.  # noqa: E501
        :rtype: ComGithubAppscodeStashApisStashV1alpha1SwiftSpec
        """
        return self._swift

    @swift.setter
    def swift(self, swift):
        """Sets the swift of this ComGithubAppscodeStashApisStashV1alpha1Backend.


        :param swift: The swift of this ComGithubAppscodeStashApisStashV1alpha1Backend.  # noqa: E501
        :type: ComGithubAppscodeStashApisStashV1alpha1SwiftSpec
        """

        self._swift = swift

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ComGithubAppscodeStashApisStashV1alpha1Backend):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
